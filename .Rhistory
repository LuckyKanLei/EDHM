PHOTO_FCMAX = "Maximum fractional veg cover",
# (1-FcMax) = min amount of ground visible",
PHOTO_FCMIN = "Minimum fractional veg cover",
# (1-FcMin) = max amount of ground visible",
PHOTO_ZENITHMIN = "Check for solar zenith angle > 89 deg",
PHOTO_ZENITHMINPAR = "Cosine of the minimum solar zenith angle for",
# photosynthesis to take place",
PHOTO_ALBSOIPARMIN = "Minimum soil reflectivity in PAR range",
PHOTO_MINMAXETRANS = "Minimum of maximum electron transport rate",
# [10e-12 mol/(m^2 s)]",
PHOTO_MINSTOMCOND = "Minimum stomatal conductance [mol H2O/m2s]",
# Factors that relate leaf internal CO2 concentration to ambient CO2, #",
# concentration",
PHOTO_FCI1C3 = "C3 Plants",
PHOTO_FCI1C4 = "C4 Plants",
# C3 PLANTS: FARQUHAR, G.D., S. VON CAEMMERER AND J.A. BERRY, = 1980. A",
# BIOCHEMICAL MODEL OF PHOTOYNTHESIS IN LEAVES OF C3 SPECIES. PLANTA = 149,",
# = 78-90.",
PHOTO_OX = "OXYGEN CONCENTRATION [MOL(O2) / MOL(AIR)]",
PHOTO_KC0 = "MICHAELIS-MENTEN CONSTANT FOR CO2 AT 25C",
#  [MOL(CO2) / MOL(AIR)]",
PHOTO_KO0 = "MICHAELIS-MENTEN CONSTANT FOR O2 AT 25C",
# [MOL(O2) / MOL(AIR)]",
PHOTO_EC = "ACTIVATION ENERGY FOR KC [J / MOL]",
PHOTO_EO = "ACTIVATION ENERGY FOR KO [J / MOL]",
PHOTO_EV = "ACTIVATION ENERGY FOR VCMAX [J / MOL]",
PHOTO_ER = "ACTIVATION ENERGY FOR DARK RESPIRATION [J / MOL]",
PHOTO_ALC3 = "EFFICIENCY OF OF PHOTON CAPTURE",
PHOTO_FRDC3 = "RATIO OF DARK RESPIRATION TO \"PVM\" AT 25C for C3",
# C4 PLANTS: COLLATZ, G.J., M. RIBAS-CARBO AND J.A. BERRY, = 1992.  COUPLED",
# PHOTOSYNTHESIS-STOMATAL CONDUCTANCE MODEL FOR LEAVES OF C4 PLANTS. AUST. J.",
# PLANT PHYSIOL. = 19, 519-538.",
PHOTO_EK = "Q10=2 (Collatz et al. 1992)",
PHOTO_ALC4 = "EFFECTIVE QUANTUM EFFICIENCY",
PHOTO_FRDC4 = "RATIO OF DARK RESPIRATION TO \"PVM\" AT 25C for C4",
PHOTO_THETA = "CURVATURE PARAMETER",
# Plant Maintenance and Growth Respiration Parameters",
PHOTO_FRLEAF = "Ratio of canopy leaf respiration to whole plant",
# maintenance respiration",
PHOTO_FRGROWTH = "Ratio of plant growth respiration to NPP",
###############################################################################",
###############################################################################",
# Soil Respiration Parameters",
SRESP_E0_LT = "Lloyd-Taylor E0 parameter [K]",
SRESP_T0_LT = "Lloyd-Taylor T0 parameter [K]",
SRESP_WMINFM = "minimum soil moisture (fraction) at which soil",
# respiration can occur",
SRESP_WMAXFM = "maximum soil moisture (fraction) at which soil",
# respiration can occur",
SRESP_WOPTFM = "soil moisture (fraction) at which maximum soil",
# respiration occurs",
SRESP_RHSAT = "ratio of soil respiration rate under saturated conditions",
# (w=wmaxFM) to that under optimal conditions (w=woptFM)",
SRESP_RFACTOR = "scaling factor to account for other (non-moisture)",
# sources of inhibition of respiration",
SRESP_TAULITTER = "Litter pool turnover time [y]",
SRESP_TAUINTER = "Intermediate pool turnover time [y]",
SRESP_TAUSLOW = "Slow pool turnover time [y]",
SRESP_FAIR = "Fraction of respired carbon from litter pool that is lost",
# to atmosphere",
SRESP_FINTER = "Fraction of [respired carbon from litter pool that goes",
# to soil] that goes to intermediate pool",
###############################################################################",
###############################################################################",
# Iteration bracket widths",
SNOW_DT = "Used to bracket snow surface temperatures while computing the",
# snow surface energy balance (C)",
SURF_DT = "Used to bracket soil surface temperatures while computing",
# energy balance (C)",
SOIL_DT = "Used to bracket soil temperatures while solving the soil",
# thermal flux (C)",
CANOPY_DT = "Used to bracket canopy air temperatures while computing",
#energy balance (C)",
CANOPY_VP = "Used to bracket canopy vapor pressures while computing",
# moisture balance (Pa)",
###############################################################################",
###############################################################################",
# Snow Parameters",
SNOW_MAX_SURFACE_SWE = "maximum depth of the surface layer in water equivalent (m) [default = 0.125]",
SNOW_NEW_SNOW_DENSITY = "density of new fallen snow [50]",
SNOW_DENS_DMLIMIT = "Density limit used in calculation of destructive metamorphism(kg/m^3)",
SNOW_DENS_MAX_CHANGE = "maximum change in snowfall depth (fraction of swe)",
# Constants in snow density computation",
SNOW_DENS_ETA0 = "viscosity of snow at T=0C and density = 0",
# used in calculation of true viscosity (Ns/m2)",
SNOW_DENS_C1 = "used in calculation of true viscosity (Ns/m2)",
SNOW_DENS_C2 = "used in calculation of true viscosity (Ns/m2)",
SNOW_DENS_C5 = "constant used in snow viscosity calculation, taken from",
SNOW_DENS_C3 = "Constant in snow density computation",
SNOW_DENS_C3_CONST = "Constant in snow density computation",  ## "Constant in snow density computation "
SNOW_DENS_C4 = "Constant in snow density computation",
SNOW_DENS_C4WET = "Constant in snow density computation",   ## Constant in snow density computation
# SNTHRM.89 (/C)",
SNOW_DENS_C6 = "constant used in snow viscosity calculation, taken from",
# SNTHRM.89 (kg/m3)",
SNOW_DENS_F = "internal compaction rate coefficient",
SNOW_DENS_EXP = "exponent in snow density compaction equation [Bras pg. 257 ]",
SNOW_DENS_DENOM = "denomenator in snow density compaction equation [Bras pg. 257]" ,
SNOW_NEW_BRAS_DENOM = "Constant in Bras new snow density computation.",
# Minimum SWQ for which the snowpack energy balance is computed independent of",
# the soil surface temperature",
SNOW_MIN_SWQ_EB_THRES = "no description",
# Attenuation coefficients for shortwave in a snowpack.  Values and equation",
# taken from Patterson and Hamblin, = "no description",
SNOW_A1 = "no description",
SNOW_A2 = "no description",
SNOW_L1 = "(1/m)",
SNOW_L2 = "(1/m)",
# Snow albedo curve parameters.  Defaults are from Bras p263. Should not be",
# changed except for serious problems with snow melt",
SNOW_NEW_SNOW_ALB = "no description",
SNOW_ALB_ACCUM_A = "no description",
SNOW_ALB_ACCUM_B = "no description",
SNOW_ALB_THAW_A = "no description",
SNOW_ALB_THAW_B = "no description",
# Defines the minimum amount of new snow (mm) which will reset the snowpack",
# albedo to new snow",
SNOW_TRACESNOW = "no description",
MIN_SNOW_WETFRAC = "Minimum fraction of snow depth to be considered wet.",
# new snow density max for Hedstrom and Pomeroy 1998 equation
SNOW_NEW_SNOW_DENS_MAX = "new snow density max for Hedstrom and Pomeroy 1998 equation",
SNOW_NEW_SNT_C1 = "Constant in Sntherm new snow density computation.",  ##
SNOW_NEW_SNT_C2 = "Constant in Sntherm new snow density computation.",  ## Constant in Sntherm new snow density computation.
SNOW_NEW_SNT_C3 = "Constant in Sntherm new snow density computation.",  ## Constant in Sntherm new snow density computation.
# snow temperature
SNOW_MAX_SNOW_TEMP = "maximum temperature (C) at which snow can fall",  ## maximum temperature (C) at which snow can fall
SNOW_MIN_RAIN_TEMP = "minimum temperature (C) at which rain can fall",  ## minimum temperature (C) at which rain can fall
SNOW_DENS_DMLIMIT_FACTOR = "Density limit factor used in calculation of destructive metamorphism (kg/m^3)",
SNOW_DEPTH_THRES = "Snow depth threshold below which we do not consider the ground flux out of the snowpack in calculating change in cold content (m)",
SNOW_CONDUCT = "conductivity of snow (W/mK)",
SNOW_LIQUID_WATER_CAPACITY = "water holding capacity of snow as a fraction of snow-water-equivalent",
HUGE_RESIST = "Extermely large resistance term (s/m)",
###############################################################################",
###############################################################################",
# Blowing Snow Parameters",
BLOWING_KA = "thermal conductivity of air (W/mK)",
BLOWING_CSALT = "saltation constant m/s",
BLOWING_UTHRESH = "threshold shear velocity m/s",
BLOWING_KIN_VIS = "Kinemativ viscosity of air (m2/s)",
BLOWING_MAX_ITER = "Max. iterations for numerical integration",
BLOWING_K = "no description",
BLOWING_MACHEPS = "Accuracy tolerance for numerical integration",
BLOWING_SETTLING = "Particle settling velocity m/s",
BLOWING_NUMINCS = "Number of prob intervals to solve for wind.",
###############################################################################",
###############################################################################",
# July average temperature for tree line",
TREELINE_TEMPERATURE = "no description")
use_data(ParamDescript)
load("F:/G2/R-program/R-Packge/EDHM/data/MetroList.rda")
load("F:/G2/R-program/R-Packge/EDHM/data/GridList.rda")
load("F:/G2/R-program/R-Packge/EDHM/data/GeoList.rda")
str(MetroList)
na <- names(MetroList)
nM <- map(MetroList, function(a) a[1:6, 1:5])
library(purrr)
nM <- map(MetroList, function(a) a[1:6, 1:5])
str(nM)
MetroList <- nM
str(GridList)
load("F:/G2/R-program/R-Packge/EDHM/data/MetroList.rda")
str(MetroList)
nM <- map(MetroList, function(a) a[1:6, 1:311])
str(nM)
MetroList <- nM
str(GeoList)
use_data(MetroList)
use_data(MetroList, overwrite = T)
document()
document()
library(EDHM)
document()
library(EDHM)
document()
library(EDHM)
load("F:/G2/R-program/R-Packge/EDHM/data/ParamAll.rda")
#' BLOWING_K = 5, #
#' BLOWING_MACHEPS = 1.0e-6, # Accuracy tolerance for numerical integration
#' BLOWING_SETTLING = 0.3, # Particle settling velocity m/s
#' BLOWING_NUMINCS = 10, # Number of prob intervals to solve for wind.
#' ###############################################################################
#'
#' ###############################################################################
#' # July average temperature for tree line
#' TREELINE_TEMPERATURE = 10.0 #
#' )
use_data(ParamAll, internal = T)
#### put in rad ####
use_data(DAYS_PER_360DAY_YEAR,
DAYS_PER_YEAR,
DAYS_PER_LYEAR,
DAYS_PER_JYEAR,
HOURS_PER_DAY,
MONTHS_PER_YEAR,
MIN_PER_HOUR,
MIN_PER_DAY,
SEC_PER_MIN,
SEC_PER_HOUR,
SEC_PER_DAY,
JOULES_PER_CAL,
GRAMS_PER_KG,
PA_PER_KPA,
BAR_PER_KPA,
RAD_PER_DEG,
M_PER_KM,
MM_PER_M,
CM_PER_M,
MM_PER_CM,
MM_PER_IN,
IN_PER_M,
MOLE_PER_KMOLE,
FRACT_TO_PERCENT,
PPM_to_MIXRATIO,
CONST_PI,
CONST_CDAY,
CONST_SDAY,
CONST_DDAYS_PER_YEAR,
CONST_OMEGA,
CONST_SECPERRAD,
CONST_RADPERDAY,
CONST_RADPERDEG,
CONST_MINDECL,
CONST_DAYSOFF,
CONST_REARTH,
CONST_G,
CONST_STEBOL,
CONST_BOLTZ,
CONST_AVOGAD,
CONST_KARMAN,
CONST_MWDAIR,
CONST_MWWV,
CONST_MWCO2,
CONST_MWAIR,
CONST_MWC,
CONST_RGAS,
CONST_RDAIR,
CONST_RWV,
CONST_EPS,
CONST_TKTRIP,
CONST_TKFRZ,
CONST_PSTD,
CONST_TSTD,
CONST_RHODAIR,
CONST_RHOFW,
CONST_RHOICE,
CONST_CPDAIR,
CONST_CPMAIR,
CONST_CPWV,
CONST_CPFW,
CONST_CPFWICE,
CONST_CPICE,
CONST_VCPICE_WQ,
CONST_LATICE,
CONST_LATVAP,
CONST_LATSUB,
CONST_SPVAL,
DBL_EPSILON,
MISSING,
ParamAll,
internal = T)
#### put in rad ####
use_data(DAYS_PER_360DAY_YEAR,
DAYS_PER_YEAR,
DAYS_PER_LYEAR,
DAYS_PER_JYEAR,
HOURS_PER_DAY,
MONTHS_PER_YEAR,
MIN_PER_HOUR,
MIN_PER_DAY,
SEC_PER_MIN,
SEC_PER_HOUR,
SEC_PER_DAY,
JOULES_PER_CAL,
GRAMS_PER_KG,
PA_PER_KPA,
BAR_PER_KPA,
RAD_PER_DEG,
M_PER_KM,
MM_PER_M,
CM_PER_M,
MM_PER_CM,
MM_PER_IN,
IN_PER_M,
MOLE_PER_KMOLE,
FRACT_TO_PERCENT,
PPM_to_MIXRATIO,
CONST_PI,
CONST_CDAY,
CONST_SDAY,
CONST_DDAYS_PER_YEAR,
CONST_OMEGA,
CONST_SECPERRAD,
CONST_RADPERDAY,
CONST_RADPERDEG,
CONST_MINDECL,
CONST_DAYSOFF,
CONST_REARTH,
CONST_G,
CONST_STEBOL,
CONST_BOLTZ,
CONST_AVOGAD,
CONST_KARMAN,
CONST_MWDAIR,
CONST_MWWV,
CONST_MWCO2,
CONST_MWAIR,
CONST_MWC,
CONST_RGAS,
CONST_RDAIR,
CONST_RWV,
CONST_EPS,
CONST_TKTRIP,
CONST_TKFRZ,
CONST_PSTD,
CONST_TSTD,
CONST_RHODAIR,
CONST_RHOFW,
CONST_RHOICE,
CONST_CPDAIR,
CONST_CPMAIR,
CONST_CPWV,
CONST_CPFW,
CONST_CPFWICE,
CONST_CPICE,
CONST_VCPICE_WQ,
CONST_LATICE,
CONST_LATVAP,
CONST_LATSUB,
CONST_SPVAL,
DBL_EPSILON,
MISSING,
ParamAll,
internal = T,
overwrite = T)
##**** Time Conversions ****##
DAYS_PER_360DAY_YEAR <- 360 ##*< days in 360day year ##
DAYS_PER_YEAR <- 365 ##*< days in nonleap year ##
DAYS_PER_LYEAR <- 366 ##*< days in leap year ##
DAYS_PER_JYEAR <- 365.25 ##* days in Julian year ##
HOURS_PER_DAY <- 24 ##*< hours per day ##
MONTHS_PER_YEAR <- 12 ##*< months per year ##
MIN_PER_HOUR <- 60 ##*< minutes per hour ##
MIN_PER_DAY <- (MIN_PER_HOUR * HOURS_PER_DAY) ##*< hours per day ##
SEC_PER_MIN <- 60 ##*< seconds per minutes ##
SEC_PER_HOUR <- (SEC_PER_MIN * MIN_PER_HOUR) ##*< seconds per hour ##
SEC_PER_DAY <- (SEC_PER_HOUR * HOURS_PER_DAY) ##*< hours per day ##
##**** Unit Conversions ****##
JOULES_PER_CAL <- 4.1868 ##*< Joules per calorie ##
GRAMS_PER_KG <- 1000 ##*< grams per kilogram ##
PA_PER_KPA <- 1000 ##*< Pa per kPa ##
BAR_PER_KPA <- 100 ##*< bars per kPa ##
RAD_PER_DEG <- 0.017453293 ##*< radians per degree ##
M_PER_KM <- 1000 ##*< meters per kilometer ##
MM_PER_M <- 1000 ##*< milimeters per meter ##
CM_PER_M <- 100 ##*< centimeters per meter ##
MM_PER_CM <- 10 ##*< milimeters per centimeter ##
MM_PER_IN <- 25.4 ##*< milimeters per inch ##
IN_PER_M <- (MM_PER_M / MM_PER_IN) ##*< inches per meter ##
MOLE_PER_KMOLE <- 1000 ##*< moles per kilomole ##
FRACT_TO_PERCENT <- 100
PPM_to_MIXRATIO <- 1.00E-06
##**** Mathematical Constants ****##
CONST_PI <- 3.141592654
##**** Time Constants ****##
CONST_CDAY <- 86400 ##*< seconds in calendar day ~ sec ##
CONST_SDAY <- 86164 ##*< seconds in siderial day ~ sec ##
CONST_DDAYS_PER_YEAR <- 365.2425 ##*< decimal days in year ##
##**** Oribital Constants ****##
CONST_OMEGA <- (2.0 * CONST_PI / CONST_SDAY)
CONST_SECPERRAD <- 13750.9871 ##*< seconds per radian of hour angle ##
CONST_RADPERDAY <- 0.017214 ##*< radians of Earth orbit per julian day ##
CONST_RADPERDEG <- 0.01745329 ##*< radians per degree ##
CONST_MINDECL <- -0.4092797 ##*< minimum declination (radians) ##
CONST_DAYSOFF <- 11.25 ##*< julian day offset of winter solstice ##
##**** Physical Constants ****##
CONST_REARTH <- 6.37E+06 ##*< radius of the earth ~ m ##
CONST_G <- 9.80616 ##*< (m s-2) standard gravitational accel. ##
CONST_STEBOL <- 5.67E-08 ##*< Stefan-Boltzmann constant ~ W/m^2/K^4 ##
CONST_BOLTZ <- 1.38E-23 ##*< Boltzmann's constant ~ J/K/molecule ##
CONST_AVOGAD <- 6.02E+26 ##*< Avogadro's number ~ molecules/kmole ##
CONST_KARMAN <- 0.4 ##*< Von Karman constant ##
##* molecular weights ##
CONST_MWDAIR <- 28.966 ##*< molecular weight of dry air ~ kg/kmole ##
CONST_MWWV <- 18.016 ##*< molecular weight of water vapor ~ kg/kmole ##
CONST_MWCO2 <- 44.011 ##*< molecular weight of CO2 ~ kg/kmole ##
CONST_MWAIR <- 28.97 ##*< molecular weight of air ~ kg/kmole ##
CONST_MWC <- 12.01 ##*< molecular weight of carbon ~ kg/kmole ##
##* gas constants ##
CONST_RGAS <- (CONST_AVOGAD * CONST_BOLTZ) ##*< Universal gas constant ~ J/K/kmole ##
CONST_RDAIR <- (CONST_RGAS / CONST_MWDAIR) ##*< Dry air gas constant ~ J/K/kg ##
CONST_RWV <- (CONST_RGAS / CONST_MWWV) ##*< Water vapor gas constant ~ J/K/kg ##
CONST_EPS <- (CONST_MWWV / CONST_MWAIR) ##*< Ratio of molecular weights ##
##* temperatures ##
CONST_TKTRIP <- 273.16 ##*< triple point of fresh water ~ K ##
CONST_TKFRZ <- 273.15 ##*< freezing T of fresh water ~ K ##
##* standard temperature and pressure ##
CONST_PSTD <- 101325 ##*< (Pa) standard pressure at 0 m elevation ##
CONST_TSTD <- (CONST_TKFRZ + 15.0) ##*< (K) standard temp at 0 m elevation ##
##* densities ##
CONST_RHODAIR <- (CONST_PSTD / (CONST_RDAIR * CONST_TKFRZ)) ##*< density of dry air at STP ~ kg/m^3 ##
CONST_RHOFW <- 1.00E+03 ##*< density of fresh water ~ kg/m^3 ##
CONST_RHOICE <- 9.17E+02 ##*< density of ice ~ kg/m^3 ##
##* specific heats ##
CONST_CPDAIR <- 1.00E+03 ##*< (J kg-1 K-1) specific heat of air ##
CONST_CPMAIR <- 1.01E+03 ##*< (J kg-1 K-1) specific heat of moist air ##
CONST_CPWV <- 1.81E+03 ##*< specific heat of water vap ~ J/kg/K ##
CONST_CPFW <- 4.19E+03 ##*< specific heat of fresh h2o ~ J/kg/K ##
CONST_CPFWICE <- 4.20E+03 ##*< specific heat of fresh h2o ~ J/kg/K ##
CONST_CPICE <- 2.12E+03 ##*< specific heat of fresh ice ~ J/kg/K ##
##* volumetric heats ##
CONST_VCPICE_WQ <- (CONST_CPICE * CONST_RHOFW) ##*< heat capacity of fresh ice per volume of water equivalent ~ J/m^3/K ##
##* latent heats ##
CONST_LATICE <- 3.34E+05 ##*< latent heat of fusion ~ J/kg ##
CONST_LATVAP <- 2.50E+06 ##*< latent heat of evaporation ~ J/kg ##
CONST_LATSUB <- (CONST_LATICE + CONST_LATVAP) ##*< latent heat of sublimation ~ J/kg ##
##*< special values ##
CONST_SPVAL <- 1.00E+30
DBL_EPSILON <- 0.000000000001
MISSING <- -999
#### put in rad ####
use_data(DAYS_PER_360DAY_YEAR,
DAYS_PER_YEAR,
DAYS_PER_LYEAR,
DAYS_PER_JYEAR,
HOURS_PER_DAY,
MONTHS_PER_YEAR,
MIN_PER_HOUR,
MIN_PER_DAY,
SEC_PER_MIN,
SEC_PER_HOUR,
SEC_PER_DAY,
JOULES_PER_CAL,
GRAMS_PER_KG,
PA_PER_KPA,
BAR_PER_KPA,
RAD_PER_DEG,
M_PER_KM,
MM_PER_M,
CM_PER_M,
MM_PER_CM,
MM_PER_IN,
IN_PER_M,
MOLE_PER_KMOLE,
FRACT_TO_PERCENT,
PPM_to_MIXRATIO,
CONST_PI,
CONST_CDAY,
CONST_SDAY,
CONST_DDAYS_PER_YEAR,
CONST_OMEGA,
CONST_SECPERRAD,
CONST_RADPERDAY,
CONST_RADPERDEG,
CONST_MINDECL,
CONST_DAYSOFF,
CONST_REARTH,
CONST_G,
CONST_STEBOL,
CONST_BOLTZ,
CONST_AVOGAD,
CONST_KARMAN,
CONST_MWDAIR,
CONST_MWWV,
CONST_MWCO2,
CONST_MWAIR,
CONST_MWC,
CONST_RGAS,
CONST_RDAIR,
CONST_RWV,
CONST_EPS,
CONST_TKTRIP,
CONST_TKFRZ,
CONST_PSTD,
CONST_TSTD,
CONST_RHODAIR,
CONST_RHOFW,
CONST_RHOICE,
CONST_CPDAIR,
CONST_CPMAIR,
CONST_CPWV,
CONST_CPFW,
CONST_CPFWICE,
CONST_CPICE,
CONST_VCPICE_WQ,
CONST_LATICE,
CONST_LATVAP,
CONST_LATSUB,
CONST_SPVAL,
DBL_EPSILON,
MISSING,
ParamAll,
internal = T,
overwrite = T)
document()
document()
document()
document()
document()
document()
library(EDHM)
document()
document()
library(EDHM)
document()
library(devtools)
document()
library(devtools)
document()
document()
library(HMtools)
detach("package:HMtools", unload = TRUE)
library(HMtools)
