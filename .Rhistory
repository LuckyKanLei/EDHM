str(factor(a[,2])$Factor)
length(factor(a[,2]))
unique(factor(a[,2]))
boomText <- read.table(text = "
RET <- InData$Evatrans$RET
PrecipitationHoch <- InData$Prec$Precipitation
MoistureVolume <- InData$Intercept$Interception
MoistureCapacityMax <- InData$Canopy$StorageCapacity
MoistureVolume1 <- InData$Ground$MoistureVolume
MoistureCapacityMax1 <- InData$Ground$MoistureCapacityMax
AerodynamicResistance <- InData$Aerodyna$AerodynaResist
ArchitecturalResistance <- InData$Aerodyna$ArchitecturalResist
StomatalResistance <- InData$Aerodyna$StomatalResist
", sep = "$")
boomText <- read.table(text = "RET <- InData$Evatrans$RET
PrecipitationHoch <- InData$Prec$Precipitation
MoistureVolume <- InData$Intercept$Interception
MoistureCapacityMax <- InData$Canopy$StorageCapacity
MoistureVolume1 <- InData$Ground$MoistureVolume
MoistureCapacityMax1 <- InData$Ground$MoistureCapacityMax
AerodynamicResistance <- InData$Aerodyna$AerodynaResist
ArchitecturalResistance <- InData$Aerodyna$ArchitecturalResist
StomatalResistance <- InData$Aerodyna$StomatalResist
", sep = "$")
boomText <- read.table(text = "RET <- InData$Evatrans$RET
PrecipitationHoch <- InData$Prec$Precipitation
MoistureVolume <- InData$Intercept$Interception
MoistureCapacityMax <- InData$Canopy$StorageCapacity
MoistureVolume1 <- InData$Ground$MoistureVolume
MoistureCapacityMax1 <- InData$Ground$MoistureCapacityMax
AerodynamicResistance <- InData$Aerodyna$AerodynaResist
ArchitecturalResistance <- InData$Aerodyna$ArchitecturalResist
StomatalResistance <- InData$Aerodyna$StomatalResist
", sep = "$")
unique(boomText[,2])
subsubN <- factor(boomText[,2])
factor(boomText[,2])
as.numeric(factor(boomText[,2]))
typeof(factor(boomText[,2]))
factor(boomText[,2])
numeric(factor(boomText[,2]))
as.data.frame(factor(boomText[,2]))
table(boomText[,2])
subList <- table(boomText[,2])
subN <- length(subList)
subN
as.data.frame(table(boomText[,2]))
subList <- table(boomText[,2])
subN <- length(subList)
subdf <- as.data.frame(table(boomText[,2]))
for(i in 1:subN){
subdf[i,2] <- subsubName <- paste0(boomText[which(boomText[,2] == subdf[i,2]),3], " = 0", collapse = ",")
}
paste0(subdf[,1], " = list(", subdf[,2], ")", collapse = ",")
subList <- table(boomText[,2])
subN <- length(subList)
subdf <- as.data.frame(table(boomText[,2]))
for(i in 1:subN){
subdf[i,2] <- paste0(boomText[which(boomText[,2] == subdf[i,2]),3], " = 0", collapse = ",")
}
paste0(subdf[,1], " = list(", subdf[,2], ")", collapse = ",")
i
subdf <- as.data.frame(table(boomText[,2]))
for(i in 1:subN){
subdf[i,2] <- paste0(boomText[which(boomText[,2] == subdf[i,1]),3], " = 0", collapse = ",")
}
paste0(subdf[,1], " = list(", subdf[,2], ")", collapse = ",")
subList <- table(boomText[,2])
subN <- length(subList)
subdf <- as.data.frame(table(boomText[,2]))
for(i in 1:subN){
subdf[i,2] <- paste0(boomText[which(boomText[,2] == subdf[i,1]),3], " = 0", collapse = ",\n")
}
print(paste0(subdf[,1], " = list(", subdf[,2], ")", collapse = ",\n"))
subList <- table(boomText[,2])
subN <- length(subList)
subdf <- as.data.frame(table(boomText[,2]))
for(i in 1:subN){
subdf[i,2] <- paste0(boomText[which(boomText[,2] == subdf[i,1]),3], " = 0", collapse = ",\n")
}
bText <- (paste0(subdf[,1], " = list(", subdf[,2], ")", collapse = ",\n"))
bText
bText
textBoom <- function(boomText){
subList <- table(boomText[,2])
subN <- length(subList)
subdf <- as.data.frame(table(boomText[,2]))
for(i in 1:subN){
subdf[i,2] <- paste0(boomText[which(boomText[,2] == subdf[i,1]),3], " = 0", collapse = ",\n")
}
cat(paste0(subdf[,1], " = list(", subdf[,2], ")", collapse = ",\n"))
}
textBoom(boomText)
boomText <- read.table(text = "  SoilMoistureVolume <- InData$Ground$MoistureVolume
SoilMoistureVolumeMax <- InData$Ground$MoistureCapacityMax
", sep = "$")
textBoom(boomText)
textBoom <- function(boomText){
subList <- table(boomText[,2])
subN <- length(subList)
subdf <- as.data.frame(table(boomText[,2]))
for(i in 1:subN){
subdf[i,2] <- paste0(boomText[which(boomText[,2] == subdf[i,1]),3], " = 0", collapse = ",\n")
}
inda1 <- "InData = left_merge(hm.list(),\nlist("
inda <- paste0(inda1, paste0(subdf[,1], " = list(", subdf[,2], ")", collapse = ",\n"),")),\nParam = list(")
}
textBoom(boomText)
textBoom <- function(boomText){
subList <- table(boomText[,2])
subN <- length(subList)
subdf <- as.data.frame(table(boomText[,2]))
for(i in 1:subN){
subdf[i,2] <- paste0(boomText[which(boomText[,2] == subdf[i,1]),3], " = 0", collapse = ",\n")
}
inda1 <- "InData = left_merge(hm.list(),\nlist("
inda <- paste0(inda1, paste0(subdf[,1], " = list(", subdf[,2], ")", collapse = ",\n"),")),\nParam = list(")
cat(inda)
}
textBoom(boomText)
paText <- read.table(text = "  paExponentARNOBase <- Param$ExponentARNOBase
paSoilMoistureVolumeARNOBaseThresholdRadio <- Param$ARNOBaseThresholdRadio
paDrainageLossMax <- Param$DrainageLossMax
paDrainageLossMin <- Param$DrainageLossMin
", sep = "$")
textBoom <- function(indaText, paText){
subList <- table(indaText[,2])
subN <- length(subList)
subdf <- as.data.frame(table(indaText[,2]))
for(i in 1:subN){
subdf[i,2] <- paste0(indaText[which(indaText[,2] == subdf[i,1]),3], " = 0", collapse = ",\n")
}
inda1 <- "InData = left_merge(hm.list(),\nlist("
inda <- paste0(inda1, paste0(subdf[,1], " = list(", subdf[,2], ")", collapse = ",\n"),")),\nParam = list(")
pa <- paste0(paText[,2], " = 0", collapse = ",")
out <- "),\nOutData = left_merge(hm.list(),\nlist()))"
cat(paste0(inda, pa, out))
}
textBoom(indaText, paText)
indaText <- read.table(text = "  SoilMoistureVolume <- InData$Ground$MoistureVolume
SoilMoistureVolumeMax <- InData$Ground$MoistureCapacityMax
", sep = "$")
paText <- read.table(text = "  paExponentARNOBase <- Param$ExponentARNOBase
paSoilMoistureVolumeARNOBaseThresholdRadio <- Param$ARNOBaseThresholdRadio
paDrainageLossMax <- Param$DrainageLossMax
paDrainageLossMin <- Param$DrainageLossMin
", sep = "$")
textBoom(indaText, paText)
textBoom <- function(indaText, paText){
subList <- table(indaText[,2])
subN <- length(subList)
subdf <- as.data.frame(table(indaText[,2]))
for(i in 1:subN){
subdf[i,2] <- paste0(indaText[which(indaText[,2] == subdf[i,1]),3], " = 0", collapse = ",\n")
}
inda1 <- "list(InData = left_merge(hm.list(),\nlist("
inda <- paste0(inda1, paste0(subdf[,1], " = list(", subdf[,2], ")", collapse = ",\n"),")),\nParam = list(")
pa <- paste0(paText[,2], " = 0", collapse = ",")
out <- "),\nOutData = left_merge(hm.list(),\nlist()))"
cat(paste0(inda, pa, out))
}
textBoom(indaText, paText)
textBoom <- function(indaText, paText){
subList <- table(indaText[,2])
subN <- length(subList)
subdf <- as.data.frame(table(indaText[,2]))
for(i in 1:subN){
subdf[i,2] <- paste0(indaText[which(indaText[,2] == subdf[i,1]),3], " = 0", collapse = ",\n")
}
inda1 <- "Data_ <- \nlist(InData = left_merge(hm.list(),\nlist("
inda <- paste0(inda1, paste0(subdf[,1], " = list(", subdf[,2], ")", collapse = ",\n"),")),\nParam = list(")
pa <- paste0(paText[,2], " = 0", collapse = ",")
out <- "),\nOutData = left_merge(hm.list(),\nlist()))"
cat(paste0(inda, pa, out))
}
textBoom(indaText, paText)
## Base
Data_BASEFLOW.ARNO <-
list(InData = left_merge(hm.list(),
list(Ground = list(MoistureVolume = 0,
MoistureCapacityMax = 0))),
Param = list(ExponentARNOBase = 0,ARNOBaseThresholdRadio = 0,DrainageLossMax = 0,DrainageLossMin = 0),
OutData = left_merge(hm.list(),
list(Ground = list(BaseFlow = 0))))
indaText <- read.table(text = "  CanopyStorageCapacity <- InData$Canopy$StorageCapacity - InData$Intercept$Interception
RainfallDuringSaturation <- InData$Prec$Precipitation
Evaporation <- InData$ET$EvaporationCanopy
", sep = "$")
paText <- read.table(text = "paCoefficientFreeThroughfall <- Param$CoefficientFreeThroughfall", sep = "$")
indaText <- read.table(text = "  CanopyStorageCapacity <- InData$Canopy$StorageCapacity -
InData$Intercept$Interception
RainfallDuringSaturation <- InData$Prec$Precipitation
Evaporation <- InData$ET$EvaporationCanopy
", sep = "$")
paText <- read.table(text = "paCoefficientFreeThroughfall <- Param$CoefficientFreeThroughfall", sep = "$")
textBoom(indaText, paText)
indaText <- read.table(text = "  HydraulicConductivity <- InData$Ground$Conductivity
WettingFrontSoilSuction <- InData$Ground$WettingFrontSuction
EffectivePorosity <- InData$Ground$Porosity
SoilMoistureVolume <- InData$Ground$MoistureVolume
SoilMoistureContent <- SoilMoistureVolume / InData$Ground$Depth
", sep = "$")
paText <- read.table(text = "paCoefficientFreeThroughfall <- Param$CoefficientFreeThroughfall", sep = "$")
textBoom(indaText, paText)
indaText <- read.table(text = "  PrecipitationHoch <- InData$Prec$Precipitation
SoilMoistureCapacityMax <- InData$Ground$MoistureCapacityMax
SoilMoistureCapacity <- InData$Ground$MoistureCapacity
", sep = "$")
paText <- read.table(text = "  paSoilMoistureCapacityB <- Param$SoilMoistureCapacityB
", sep = "$")
textBoom(indaText, paText)
indaText <- read.table(text = "  PrecipitationHoch <- InData$Prec$Precipitation
InfiltrationRateMax <- InData$Infilt$InfiltrationRat
", sep = "$")
paText <- read.table(text = "  paInfiltrationRateB <- Param$InfiltrationRateB
", sep = "$")
textBoom(indaText, paText)
indaText <- read.table(text = "  PrecipitationHoch <- InData$Prec$Precipitation
SoilMoistureCapacityMax <- InData$Ground$MoistureCapacityMax
SoilMoistureVolum <- InData$Ground$MoistureVolume
", sep = "$")
paText <- read.table(text = "  paInfiltrationRateB <- Param$InfiltrationRateB
", sep = "$")
textBoom(indaText, paText)
indaText <- read.table(text = "  PrecipitationHoch <- InData$Prec$Precipitation
InfiltrationRateMax <- InData$Infilt$InfiltrationRateMax
", sep = "$")
paText <- read.table(text = "  paInfiltrationRateB <- Param$InfiltrationRateB
", sep = "$")
textBoom(indaText, paText)
indaText <- read.table(text = "  PrecipitationHoch <- InData$Prec$Precipitation
SoilMoistureCapacityMax <- InData$Ground$MoistureCapacityMax
SoilMoistureVolume <- InData$Ground$MoistureVolume
InfiltrationRateMax <- InData$Infilt$InfiltrationRat
", sep = "$")
paText <- read.table(text = "  paSoilMoistureCapacityB <- Param$SoilMoistureCapacityB
paInfiltrationRateB <- Param$InfiltrationRateB
", sep = "$")
textBoom(indaText, paText)
indaText <- read.table(text = "  PrecipitationHoch <- InData$Prec$Precipitation
SoilMoistureCapacity <- InData$Ground$MoistureCapacity
SoilMoistureCapacityMax <- InData$Ground$MoistureCapacityMax
InfiltrationRateMax <- InData$Infilt$InfiltrationRateMax
", sep = "$")
paText <- read.table(text = "  paSoilMoistureCapacityB <- Param$SoilMoistureCapacityB
paInfiltrationRateB <- Param$InfiltrationRateB
", sep = "$")
textBoom(indaText, paText)
library(devtools)
document()
document()
## ET
Data_ReferenceET.PenMon <-
list(InData = left_merge(t_vari.hm.list(),
list(MetData = list(TAir = t_vari.array(0, c(3)),
TMax = t_vari.array(0, c(3)),
TMin = t_vari.array(0, c(3)),
RelativeHumidity = t_vari.array(0, c(3)),
WindSpeed = t_vari.array(0, c(3)),
WindH = t_vari.array(0, c(3)),
SunHour = t_vari.array(0, c(3))),
GeoData = list(Latitude = t_vari.array(0, c(3)),
Elevation = t_vari.array(0, c(3))),
TimeData = list(NDay = t_vari.array(0, c(3))))),
Param = list(PeriodN = t_vari.array(0, c(3)),
GridN = t_vari.array(0, c(3))),
OutData = left_merge(t_vari.hm.list(),
list(Evatrans = list(RET = t_vari.array(0, c(3))))))
Data_ReferenceET.Hargreaves <-
list(InData = left_merge(t_vari.hm.list(),
list(MetData = list(TAir = t_vari.array(0, c(3)),
TMax = t_vari.array(0, c(3)),
TMin = t_vari.array(0, c(3))),
GeoData = list(Latitude = t_vari.array(0, c(3))),
TimeData = list(NDay = t_vari.array(0, c(3))))),
Param = list(PeriodN = t_vari.array(0, c(3)),
GridN = t_vari.array(0, c(3))),
OutData = left_merge(t_vari.hm.list(),
list(Evatrans = list(RET = t_vari.array(0, c(3))))))
Data_ActualET.Vic <-
list(InData = left_merge(t_vari.hm.list(),
list(Aerodyna = list(AerodynaResist = t_vari.array(0, c(3)),
ArchitecturalResist = t_vari.array(0, c(3)),
StomatalResist = t_vari.array(0, c(3))),
Canopy = list(StorageCapacity = t_vari.array(0, c(3))),
Evatrans = list(RET = t_vari.array(0, c(3))),
Ground = list(MoistureVolume = t_vari.array(0, c(3)),
MoistureCapacityMax = t_vari.array(0, c(3))),
Intercept = list(Interception = t_vari.array(0, c(3))),
Prec = list(Precipitation = t_vari.array(0, c(3))))),
Param = list(SoilMoistureCapacityB = t_vari.array(0, c(3))),
OutData = left_merge(t_vari.hm.list(),
list(Evatrans = list(EvaporationCanopy = t_vari.array(0, c(3)),
Transpiration = t_vari.array(0, c(3)),
EvaporationLand = t_vari.array(0, c(3))))))
## Base
Data_BASEFLOW.ARNO <-
list(InData = left_merge(t_vari.hm.list(),
list(Ground = list(MoistureVolume = t_vari.array(0, c(3)),
MoistureCapacityMax = t_vari.array(0, c(3))))),
Param = list(ExponentARNOBase = t_vari.array(0, c(3)),ARNOBaseThresholdRadio = t_vari.array(0, c(3)),DrainageLossMax = t_vari.array(0, c(3)),DrainageLossMin = t_vari.array(0, c(3))),
OutData = left_merge(t_vari.hm.list(),
list(Ground = list(BaseFlow = t_vari.array(0, c(3))))))
## infil
Data_INTERCEPTION.Gash <-
list(InData = left_merge(t_vari.hm.list(),
list(Canopy = list(StorageCapacity = t_vari.array(0, c(3))),
Evatrans = list(EvaporationCanopy = t_vari.array(0, c(3))),
Intercept = list(Interception = t_vari.array(0, c(3))),
Prec = list(Precipitation = t_vari.array(0, c(3))))),
Param = list(CoefficientFreeThroughfall = t_vari.array(0, c(3))),
OutData = left_merge(t_vari.hm.list(),
list(Intercept = list(Interception = t_vari.array(0, c(3))),
Prec = list(Precipitation = t_vari.array(0, c(3))))))
## runoff
Data_InfiltratRat.GreenAmpt <-
list(InData = left_merge(t_vari.hm.list(),
list(Ground = list(Conductivity = t_vari.array(0, c(3)),
WettingFrontSuction = t_vari.array(0, c(3)),
Porosity = t_vari.array(0, c(3)),
MoistureVolume = t_vari.array(0, c(3)),
Depth = t_vari.array(0, c(3))))),
Param = list(),
OutData = left_merge(t_vari.hm.list(),
list()))
Data_Infiltration.SER <-
list(InData = left_merge(t_vari.hm.list(),
list(Ground = list(MoistureCapacityMax = t_vari.array(0, c(3)),
MoistureCapacity = t_vari.array(0, c(3))),
Prec = list(Precipitation = t_vari.array(0, c(3))))),
Param = list(SoilMoistureCapacityB = t_vari.array(0, c(3))),
OutData = left_merge(t_vari.hm.list(),
list(Infilt = list(Infiltration = t_vari.array(0, c(3))))))
Data_Infiltration.OIER <-
list(InData = left_merge(t_vari.hm.list(),
list(Infilt = list(InfiltrationRat = t_vari.array(0, c(3))),
Prec = list(Precipitation = t_vari.array(0, c(3))))),
Param = list(InfiltrationRateB = t_vari.array(0, c(3))),
OutData = left_merge(t_vari.hm.list(),
list(Infilt = list(Infiltration = t_vari.array(0, c(3))))))
Data_RUNOFF.SER <-
list(InData = left_merge(t_vari.hm.list(),
list(Ground = list(MoistureCapacityMax = t_vari.array(0, c(3)),
MoistureVolume = t_vari.array(0, c(3))),
Prec = list(Precipitation = t_vari.array(0, c(3))))),
Param = list(SoilMoistureCapacityB = t_vari.array(0, c(3))),
OutData = left_merge(t_vari.hm.list(),
list(Ground = list(Runoff = t_vari.array(0, c(3))),
Infilt = list(Infiltration = t_vari.array(0, c(3))))))
Data_RUNOFF.OIER <-
list(InData = left_merge(t_vari.hm.list(),
list(Infilt = list(InfiltrationRateMax = t_vari.array(0, c(3))),
Prec = list(Precipitation = t_vari.array(0, c(3))))),
Param = list(InfiltrationRateB = t_vari.array(0, c(3))),
OutData = left_merge(t_vari.hm.list(),
list(Ground = list(Runoff = t_vari.array(0, c(3))),
Infilt = list(Infiltration = t_vari.array(0, c(3))))))
Data_RUNOFF.Vic <-
list(InData = left_merge(t_vari.hm.list(),
list(Ground = list(MoistureCapacityMax = t_vari.array(0, c(3)),
MoistureVolume = t_vari.array(0, c(3))),
Infilt = list(InfiltrationRat = t_vari.array(0, c(3))),
Prec = list(Precipitation = t_vari.array(0, c(3))))),
Param = list(SoilMoistureCapacityB = t_vari.array(0, c(3)),InfiltrationRateB = t_vari.array(0, c(3))),
OutData = left_merge(t_vari.hm.list(),
list(Ground = list(Runoff = t_vari.array(0, c(3))),
Infilt = list(Infiltration = t_vari.array(0, c(3))))))
Data_RUNOFF.VM <-
list(InData = left_merge(t_vari.hm.list(),
list(Ground = list(MoistureCapacity = t_vari.array(0, c(3)),
MoistureCapacityMax = t_vari.array(0, c(3))),
Infilt = list(InfiltrationRateMax = t_vari.array(0, c(3))),
Prec = list(Precipitation = t_vari.array(0, c(3))))),
Param = list(SoilMoistureCapacityB = t_vari.array(0, c(3)),InfiltrationRateB = t_vari.array(0, c(3))),
OutData = left_merge(t_vari.hm.list(),
list(Ground = list(Runoff = t_vari.array(0, c(3))),
Infilt = list(Infiltration = t_vari.array(0, c(3))))))
# eval(parse(text = paste0("use_data(",paste0(ls(), collapse = ", "), ", internal = F, overwrite = T)")))
library(HMtools)
## ET
Data_ReferenceET.PenMon <-
list(InData = left_merge(t_vari.hm.list(),
list(MetData = list(TAir = t_vari.array(0, c(3)),
TMax = t_vari.array(0, c(3)),
TMin = t_vari.array(0, c(3)),
RelativeHumidity = t_vari.array(0, c(3)),
WindSpeed = t_vari.array(0, c(3)),
WindH = t_vari.array(0, c(3)),
SunHour = t_vari.array(0, c(3))),
GeoData = list(Latitude = t_vari.array(0, c(3)),
Elevation = t_vari.array(0, c(3))),
TimeData = list(NDay = t_vari.array(0, c(3))))),
Param = list(PeriodN = t_vari.array(0, c(3)),
GridN = t_vari.array(0, c(3))),
OutData = left_merge(t_vari.hm.list(),
list(Evatrans = list(RET = t_vari.array(0, c(3))))))
Data_ReferenceET.Hargreaves <-
list(InData = left_merge(t_vari.hm.list(),
list(MetData = list(TAir = t_vari.array(0, c(3)),
TMax = t_vari.array(0, c(3)),
TMin = t_vari.array(0, c(3))),
GeoData = list(Latitude = t_vari.array(0, c(3))),
TimeData = list(NDay = t_vari.array(0, c(3))))),
Param = list(PeriodN = t_vari.array(0, c(3)),
GridN = t_vari.array(0, c(3))),
OutData = left_merge(t_vari.hm.list(),
list(Evatrans = list(RET = t_vari.array(0, c(3))))))
Data_ActualET.Vic <-
list(InData = left_merge(t_vari.hm.list(),
list(Aerodyna = list(AerodynaResist = t_vari.array(0, c(3)),
ArchitecturalResist = t_vari.array(0, c(3)),
StomatalResist = t_vari.array(0, c(3))),
Canopy = list(StorageCapacity = t_vari.array(0, c(3))),
Evatrans = list(RET = t_vari.array(0, c(3))),
Ground = list(MoistureVolume = t_vari.array(0, c(3)),
MoistureCapacityMax = t_vari.array(0, c(3))),
Intercept = list(Interception = t_vari.array(0, c(3))),
Prec = list(Precipitation = t_vari.array(0, c(3))))),
Param = list(SoilMoistureCapacityB = t_vari.array(0, c(3))),
OutData = left_merge(t_vari.hm.list(),
list(Evatrans = list(EvaporationCanopy = t_vari.array(0, c(3)),
Transpiration = t_vari.array(0, c(3)),
EvaporationLand = t_vari.array(0, c(3))))))
## Base
Data_BASEFLOW.ARNO <-
list(InData = left_merge(t_vari.hm.list(),
list(Ground = list(MoistureVolume = t_vari.array(0, c(3)),
MoistureCapacityMax = t_vari.array(0, c(3))))),
Param = list(ExponentARNOBase = t_vari.array(0, c(3)),ARNOBaseThresholdRadio = t_vari.array(0, c(3)),DrainageLossMax = t_vari.array(0, c(3)),DrainageLossMin = t_vari.array(0, c(3))),
OutData = left_merge(t_vari.hm.list(),
list(Ground = list(BaseFlow = t_vari.array(0, c(3))))))
## infil
Data_INTERCEPTION.Gash <-
list(InData = left_merge(t_vari.hm.list(),
list(Canopy = list(StorageCapacity = t_vari.array(0, c(3))),
Evatrans = list(EvaporationCanopy = t_vari.array(0, c(3))),
Intercept = list(Interception = t_vari.array(0, c(3))),
Prec = list(Precipitation = t_vari.array(0, c(3))))),
Param = list(CoefficientFreeThroughfall = t_vari.array(0, c(3))),
OutData = left_merge(t_vari.hm.list(),
list(Intercept = list(Interception = t_vari.array(0, c(3))),
Prec = list(Precipitation = t_vari.array(0, c(3))))))
## runoff
Data_InfiltratRat.GreenAmpt <-
list(InData = left_merge(t_vari.hm.list(),
list(Ground = list(Conductivity = t_vari.array(0, c(3)),
WettingFrontSuction = t_vari.array(0, c(3)),
Porosity = t_vari.array(0, c(3)),
MoistureVolume = t_vari.array(0, c(3)),
Depth = t_vari.array(0, c(3))))),
Param = list(),
OutData = left_merge(t_vari.hm.list(),
list()))
Data_Infiltration.SER <-
list(InData = left_merge(t_vari.hm.list(),
list(Ground = list(MoistureCapacityMax = t_vari.array(0, c(3)),
MoistureCapacity = t_vari.array(0, c(3))),
Prec = list(Precipitation = t_vari.array(0, c(3))))),
Param = list(SoilMoistureCapacityB = t_vari.array(0, c(3))),
OutData = left_merge(t_vari.hm.list(),
list(Infilt = list(Infiltration = t_vari.array(0, c(3))))))
Data_Infiltration.OIER <-
list(InData = left_merge(t_vari.hm.list(),
list(Infilt = list(InfiltrationRat = t_vari.array(0, c(3))),
Prec = list(Precipitation = t_vari.array(0, c(3))))),
Param = list(InfiltrationRateB = t_vari.array(0, c(3))),
OutData = left_merge(t_vari.hm.list(),
list(Infilt = list(Infiltration = t_vari.array(0, c(3))))))
Data_RUNOFF.SER <-
list(InData = left_merge(t_vari.hm.list(),
list(Ground = list(MoistureCapacityMax = t_vari.array(0, c(3)),
MoistureVolume = t_vari.array(0, c(3))),
Prec = list(Precipitation = t_vari.array(0, c(3))))),
Param = list(SoilMoistureCapacityB = t_vari.array(0, c(3))),
OutData = left_merge(t_vari.hm.list(),
list(Ground = list(Runoff = t_vari.array(0, c(3))),
Infilt = list(Infiltration = t_vari.array(0, c(3))))))
Data_RUNOFF.OIER <-
list(InData = left_merge(t_vari.hm.list(),
list(Infilt = list(InfiltrationRateMax = t_vari.array(0, c(3))),
Prec = list(Precipitation = t_vari.array(0, c(3))))),
Param = list(InfiltrationRateB = t_vari.array(0, c(3))),
OutData = left_merge(t_vari.hm.list(),
list(Ground = list(Runoff = t_vari.array(0, c(3))),
Infilt = list(Infiltration = t_vari.array(0, c(3))))))
Data_RUNOFF.Vic <-
list(InData = left_merge(t_vari.hm.list(),
list(Ground = list(MoistureCapacityMax = t_vari.array(0, c(3)),
MoistureVolume = t_vari.array(0, c(3))),
Infilt = list(InfiltrationRat = t_vari.array(0, c(3))),
Prec = list(Precipitation = t_vari.array(0, c(3))))),
Param = list(SoilMoistureCapacityB = t_vari.array(0, c(3)),InfiltrationRateB = t_vari.array(0, c(3))),
OutData = left_merge(t_vari.hm.list(),
list(Ground = list(Runoff = t_vari.array(0, c(3))),
Infilt = list(Infiltration = t_vari.array(0, c(3))))))
Data_RUNOFF.VM <-
list(InData = left_merge(t_vari.hm.list(),
list(Ground = list(MoistureCapacity = t_vari.array(0, c(3)),
MoistureCapacityMax = t_vari.array(0, c(3))),
Infilt = list(InfiltrationRateMax = t_vari.array(0, c(3))),
Prec = list(Precipitation = t_vari.array(0, c(3))))),
Param = list(SoilMoistureCapacityB = t_vari.array(0, c(3)),InfiltrationRateB = t_vari.array(0, c(3))),
OutData = left_merge(t_vari.hm.list(),
list(Ground = list(Runoff = t_vari.array(0, c(3))),
Infilt = list(Infiltration = t_vari.array(0, c(3))))))
# eval(parse(text = paste0("use_data(",paste0(ls(), collapse = ", "), ", internal = F, overwrite = T)")))
eval(parse(text = paste0("use_data(",paste0(ls(), collapse = ", "), ", internal = F, overwrite = T)")))
library(devtools)
eval(parse(text = paste0("use_data(",paste0(ls(), collapse = ", "), ", internal = F, overwrite = T)")))
document()
document()
library(EDHM)
